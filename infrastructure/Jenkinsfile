pipeline {
  agent any

  stages {
    stage('Cloner le code') {
      steps {
        git branch: 'main', url: 'https://github.com/GemimaOndele/Projet-DEVOPS.git'
      }
    }

    stage('Connexion Ã  DockerHub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
        }
      }
    }

    stage('Build des images Docker') {
      steps {
        sh 'docker build -f Dockerfile.ticket-service -t tickets-backend ./backend/ticket-service'
        sh 'docker build -f Dockerfile.frontend -t tickets-frontend ./frontend'
      }
    }

    stage('Lancer les conteneurs') {
      steps {
        sh 'docker-compose up -d'
      }
    }

    stage('Test de l\'API') {
      steps {
        sh 'curl -X GET http://localhost:4000/api/tickets || true'
      }
    }
  }

  post {
    always {
      echo 'Nettoyage des conteneurs...'
      node {
        sh 'docker-compose down --volumes'
      }
    }
  }
}
